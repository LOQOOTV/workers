class QueryHandler(object):
    def __init__(self, u):
        self.ok = parse_qsl(urlparse(u).query, keep_blank_values=True)

    def newNetwork(self):
         queue = j.queue(self.hName)
         r = queue.add_subscribers(subscriber1a)

    def newChannel(self):
          queue = j.queue(self.cName)
          r = queue.add_subscribers(
              subscriberCreateChanTable,
              subscriberSortScenes,
              self.hname
              )
          rd = self.time

    def loginError(self):
        pass


    @property
    def time(self):
        return whatever_time_is_supposed_to_be

    @property
    def hName(self):
        return self.ok[11][1]

    @property
    def cName(self):
        return self.ok[12][1]

    @property
    def nName(self):
        return self.ok[10][1]

    @property
    def eventType(self):
        return self.ok[9][1]


    actions = {
        'newChannel': newChannel,
        'newNetwork': newNetwork,
        'loginError': loginError,
        }

    def dispatch(self):
        handler  = self.actions.get(self.eventType)
        handler(self)
